
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleftEQNELTGTLEGEleftPLUSMINUSleftTIMESDIVIDEAND BY COMMA DIVIDE EQ FROM GE GT ID INSERT INTO LE LPAREN LT MINUS NE NOT NUMBER OR ORDER PLUS RPAREN SELECT SEMI STRING TIMES VALUES WHERE\n        statement_list : statement\n                       | statement_list statement\n        \n        statement : insert_statement\n                  | select_statement\n        \n        insert_statement : INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN\n                         | INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN \n        \n        select_statement : SELECT select_columns FROM ID opt_where_clause opt_orderby_clause\n        \n        select_columns : TIMES\n                       | id_list\n        \n        opt_where_clause : WHERE search_condition\n                         |\n        \n        search_condition : search_condition OR search_condition\n                         | search_condition AND search_condition\n                         | NOT search_condition\n                         | LPAREN search_condition RPAREN\n                         | predicate\n        \n        predicate : comparison_predicate\n        \n        comparison_predicate : scalar_exp EQ scalar_exp\n                             | scalar_exp NE scalar_exp\n                             | scalar_exp LT scalar_exp\n                             | scalar_exp LE scalar_exp\n                             | scalar_exp GT scalar_exp\n                             | scalar_exp GE scalar_exp\n        \n        scalar_exp : scalar_exp PLUS scalar_exp\n                   | scalar_exp MINUS scalar_exp\n                   | scalar_exp TIMES scalar_exp\n                   | scalar_exp DIVIDE scalar_exp\n                   | atom\n                   | LPAREN scalar_exp RPAREN\n        \n        atom : NUMBER\n             | ID\n             | STRING\n        \n        opt_orderby_clause : ORDER BY ID\n                           |\n        \n        id_list : ID\n                | id_list COMMA ID\n        \n        expr_list : expr\n                  | expr_list COMMA expr\n        \n        expr : expr PLUS term\n             | expr MINUS term\n             | term\n             | ID\n             | STRING\n        \n        term : term TIMES factor\n             | term DIVIDE factor\n             | factor\n        \n        factor : NUMBER\n               | LPAREN expr RPAREN\n        '
    
_lr_action_items = {'INSERT':([0,1,2,3,4,7,20,24,28,30,33,34,36,37,38,39,45,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,84,98,],[5,5,-1,-3,-4,-2,-11,-34,-7,-10,-16,-17,-28,-30,-31,-32,-14,-33,-12,-13,-15,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-5,-6,]),'SELECT':([0,1,2,3,4,7,20,24,28,30,33,34,36,37,38,39,45,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,84,98,],[6,6,-1,-3,-4,-2,-11,-34,-7,-10,-16,-17,-28,-30,-31,-32,-14,-33,-12,-13,-15,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-5,-6,]),'$end':([1,2,3,4,7,20,24,28,30,33,34,36,37,38,39,45,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,84,98,],[0,-1,-3,-4,-2,-11,-34,-7,-10,-16,-17,-28,-30,-31,-32,-14,-33,-12,-13,-15,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-5,-6,]),'ID':([5,6,9,14,16,17,19,25,31,32,40,42,43,44,48,49,50,51,52,53,54,55,56,57,59,66,73,85,],[8,11,15,11,20,21,11,38,38,38,58,67,38,38,38,38,38,38,38,38,38,38,38,38,58,58,38,58,]),'INTO':([5,],[9,]),'TIMES':([6,35,36,37,38,39,47,62,64,65,71,72,74,75,76,77,78,79,80,81,82,91,92,94,95,96,97,],[12,56,-28,-30,-31,-32,56,88,-46,-47,-29,56,56,56,56,56,56,56,56,-26,-27,56,-48,88,88,-44,-45,]),'LPAREN':([8,15,25,26,31,32,40,41,43,44,48,49,50,51,52,53,54,55,56,57,59,66,73,85,86,87,88,89,],[14,19,32,40,32,32,59,66,32,32,73,73,73,73,73,73,73,73,73,73,59,59,73,59,59,59,59,59,]),'FROM':([10,11,12,13,21,],[16,-35,-8,-9,-36,]),'COMMA':([11,13,18,21,23,58,60,61,62,63,64,65,90,92,93,94,95,96,97,],[-35,17,17,-36,17,-42,85,-37,-41,-43,-46,-47,85,-48,-38,-39,-40,-44,-45,]),'RPAREN':([11,18,21,23,33,34,36,37,38,39,45,46,47,58,60,61,62,63,64,65,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,90,91,92,93,94,95,96,97,],[-35,22,-36,27,-16,-17,-28,-30,-31,-32,-14,70,71,-42,84,-37,-41,-43,-46,-47,-12,-13,-15,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,92,98,71,-48,-38,-39,-40,-44,-45,]),'WHERE':([20,],[25,]),'ORDER':([20,24,30,33,34,36,37,38,39,45,68,69,70,71,72,74,75,76,77,78,79,80,81,82,],[-11,29,-10,-16,-17,-28,-30,-31,-32,-14,-12,-13,-15,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'VALUES':([22,27,],[26,41,]),'NOT':([25,31,32,43,44,],[31,31,31,31,31,]),'NUMBER':([25,31,32,40,43,44,48,49,50,51,52,53,54,55,56,57,59,66,73,85,86,87,88,89,],[37,37,37,65,37,37,37,37,37,37,37,37,37,37,37,37,65,65,37,65,65,65,65,65,]),'STRING':([25,31,32,40,43,44,48,49,50,51,52,53,54,55,56,57,59,66,73,85,],[39,39,39,63,39,39,39,39,39,39,39,39,39,39,39,39,63,63,39,63,]),'BY':([29,],[42,]),'OR':([30,33,34,36,37,38,39,45,46,68,69,70,71,72,74,75,76,77,78,79,80,81,82,],[43,-16,-17,-28,-30,-31,-32,-14,43,-12,-13,-15,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'AND':([30,33,34,36,37,38,39,45,46,68,69,70,71,72,74,75,76,77,78,79,80,81,82,],[44,-16,-17,-28,-30,-31,-32,-14,44,44,-13,-15,-29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,]),'EQ':([35,36,37,38,39,47,71,79,80,81,82,],[48,-28,-30,-31,-32,48,-29,-24,-25,-26,-27,]),'NE':([35,36,37,38,39,47,71,79,80,81,82,],[49,-28,-30,-31,-32,49,-29,-24,-25,-26,-27,]),'LT':([35,36,37,38,39,47,71,79,80,81,82,],[50,-28,-30,-31,-32,50,-29,-24,-25,-26,-27,]),'LE':([35,36,37,38,39,47,71,79,80,81,82,],[51,-28,-30,-31,-32,51,-29,-24,-25,-26,-27,]),'GT':([35,36,37,38,39,47,71,79,80,81,82,],[52,-28,-30,-31,-32,52,-29,-24,-25,-26,-27,]),'GE':([35,36,37,38,39,47,71,79,80,81,82,],[53,-28,-30,-31,-32,53,-29,-24,-25,-26,-27,]),'PLUS':([35,36,37,38,39,47,58,61,62,63,64,65,71,72,74,75,76,77,78,79,80,81,82,83,91,92,93,94,95,96,97,],[54,-28,-30,-31,-32,54,-42,86,-41,-43,-46,-47,-29,54,54,54,54,54,54,-24,-25,-26,-27,86,54,-48,86,-39,-40,-44,-45,]),'MINUS':([35,36,37,38,39,47,58,61,62,63,64,65,71,72,74,75,76,77,78,79,80,81,82,83,91,92,93,94,95,96,97,],[55,-28,-30,-31,-32,55,-42,87,-41,-43,-46,-47,-29,55,55,55,55,55,55,-24,-25,-26,-27,87,55,-48,87,-39,-40,-44,-45,]),'DIVIDE':([35,36,37,38,39,47,62,64,65,71,72,74,75,76,77,78,79,80,81,82,91,92,94,95,96,97,],[57,-28,-30,-31,-32,57,89,-46,-47,-29,57,57,57,57,57,57,57,57,-26,-27,57,-48,89,89,-44,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'statement':([0,1,],[2,7,]),'insert_statement':([0,1,],[3,3,]),'select_statement':([0,1,],[4,4,]),'select_columns':([6,],[10,]),'id_list':([6,14,19,],[13,18,23,]),'opt_where_clause':([20,],[24,]),'opt_orderby_clause':([24,],[28,]),'search_condition':([25,31,32,43,44,],[30,45,46,68,69,]),'predicate':([25,31,32,43,44,],[33,33,33,33,33,]),'comparison_predicate':([25,31,32,43,44,],[34,34,34,34,34,]),'scalar_exp':([25,31,32,43,44,48,49,50,51,52,53,54,55,56,57,73,],[35,35,47,35,35,72,74,75,76,77,78,79,80,81,82,91,]),'atom':([25,31,32,43,44,48,49,50,51,52,53,54,55,56,57,73,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expr_list':([40,66,],[60,90,]),'expr':([40,59,66,85,],[61,83,61,93,]),'term':([40,59,66,85,86,87,],[62,62,62,62,94,95,]),'factor':([40,59,66,85,86,87,88,89,],[64,64,64,64,64,64,96,97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement','statement_list',1,'p_statement_list','SqlParser.py',21),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','SqlParser.py',22),
  ('statement -> insert_statement','statement',1,'p_statement','SqlParser.py',31),
  ('statement -> select_statement','statement',1,'p_statement','SqlParser.py',32),
  ('insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN','insert_statement',9,'p_insert_statement','SqlParser.py',38),
  ('insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN','insert_statement',10,'p_insert_statement','SqlParser.py',39),
  ('select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause','select_statement',6,'p_select_statement','SqlParser.py',49),
  ('select_columns -> TIMES','select_columns',1,'p_select_columns','SqlParser.py',55),
  ('select_columns -> id_list','select_columns',1,'p_select_columns','SqlParser.py',56),
  ('opt_where_clause -> WHERE search_condition','opt_where_clause',2,'p_opt_where_clause','SqlParser.py',62),
  ('opt_where_clause -> <empty>','opt_where_clause',0,'p_opt_where_clause','SqlParser.py',63),
  ('search_condition -> search_condition OR search_condition','search_condition',3,'p_search_condition','SqlParser.py',72),
  ('search_condition -> search_condition AND search_condition','search_condition',3,'p_search_condition','SqlParser.py',73),
  ('search_condition -> NOT search_condition','search_condition',2,'p_search_condition','SqlParser.py',74),
  ('search_condition -> LPAREN search_condition RPAREN','search_condition',3,'p_search_condition','SqlParser.py',75),
  ('search_condition -> predicate','search_condition',1,'p_search_condition','SqlParser.py',76),
  ('predicate -> comparison_predicate','predicate',1,'p_predicate','SqlParser.py',92),
  ('comparison_predicate -> scalar_exp EQ scalar_exp','comparison_predicate',3,'p_comparison_predicate','SqlParser.py',98),
  ('comparison_predicate -> scalar_exp NE scalar_exp','comparison_predicate',3,'p_comparison_predicate','SqlParser.py',99),
  ('comparison_predicate -> scalar_exp LT scalar_exp','comparison_predicate',3,'p_comparison_predicate','SqlParser.py',100),
  ('comparison_predicate -> scalar_exp LE scalar_exp','comparison_predicate',3,'p_comparison_predicate','SqlParser.py',101),
  ('comparison_predicate -> scalar_exp GT scalar_exp','comparison_predicate',3,'p_comparison_predicate','SqlParser.py',102),
  ('comparison_predicate -> scalar_exp GE scalar_exp','comparison_predicate',3,'p_comparison_predicate','SqlParser.py',103),
  ('scalar_exp -> scalar_exp PLUS scalar_exp','scalar_exp',3,'p_scalar_exp','SqlParser.py',110),
  ('scalar_exp -> scalar_exp MINUS scalar_exp','scalar_exp',3,'p_scalar_exp','SqlParser.py',111),
  ('scalar_exp -> scalar_exp TIMES scalar_exp','scalar_exp',3,'p_scalar_exp','SqlParser.py',112),
  ('scalar_exp -> scalar_exp DIVIDE scalar_exp','scalar_exp',3,'p_scalar_exp','SqlParser.py',113),
  ('scalar_exp -> atom','scalar_exp',1,'p_scalar_exp','SqlParser.py',114),
  ('scalar_exp -> LPAREN scalar_exp RPAREN','scalar_exp',3,'p_scalar_exp','SqlParser.py',115),
  ('atom -> NUMBER','atom',1,'p_atom','SqlParser.py',130),
  ('atom -> ID','atom',1,'p_atom','SqlParser.py',131),
  ('atom -> STRING','atom',1,'p_atom','SqlParser.py',132),
  ('opt_orderby_clause -> ORDER BY ID','opt_orderby_clause',3,'p_opt_orderby_clause','SqlParser.py',139),
  ('opt_orderby_clause -> <empty>','opt_orderby_clause',0,'p_opt_orderby_clause','SqlParser.py',140),
  ('id_list -> ID','id_list',1,'p_id_list','SqlParser.py',170),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','SqlParser.py',171),
  ('expr_list -> expr','expr_list',1,'p_expr_list','SqlParser.py',180),
  ('expr_list -> expr_list COMMA expr','expr_list',3,'p_expr_list','SqlParser.py',181),
  ('expr -> expr PLUS term','expr',3,'p_expr','SqlParser.py',190),
  ('expr -> expr MINUS term','expr',3,'p_expr','SqlParser.py',191),
  ('expr -> term','expr',1,'p_expr','SqlParser.py',192),
  ('expr -> ID','expr',1,'p_expr','SqlParser.py',193),
  ('expr -> STRING','expr',1,'p_expr','SqlParser.py',194),
  ('term -> term TIMES factor','term',3,'p_term','SqlParser.py',203),
  ('term -> term DIVIDE factor','term',3,'p_term','SqlParser.py',204),
  ('term -> factor','term',1,'p_term','SqlParser.py',205),
  ('factor -> NUMBER','factor',1,'p_factor','SqlParser.py',214),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','SqlParser.py',215),
]
