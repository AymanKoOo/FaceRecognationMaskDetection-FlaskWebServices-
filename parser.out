Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SEMI

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement
Rule 2     statement_list -> statement_list statement
Rule 3     statement -> insert_statement
Rule 4     statement -> select_statement
Rule 5     insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
Rule 6     insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
Rule 7     select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause
Rule 8     select_columns -> TIMES
Rule 9     select_columns -> id_list
Rule 10    opt_where_clause -> WHERE search_condition
Rule 11    opt_where_clause -> <empty>
Rule 12    search_condition -> search_condition OR search_condition
Rule 13    search_condition -> search_condition AND search_condition
Rule 14    search_condition -> NOT search_condition
Rule 15    search_condition -> LPAREN search_condition RPAREN
Rule 16    search_condition -> predicate
Rule 17    predicate -> comparison_predicate
Rule 18    comparison_predicate -> scalar_exp EQ scalar_exp
Rule 19    comparison_predicate -> scalar_exp NE scalar_exp
Rule 20    comparison_predicate -> scalar_exp LT scalar_exp
Rule 21    comparison_predicate -> scalar_exp LE scalar_exp
Rule 22    comparison_predicate -> scalar_exp GT scalar_exp
Rule 23    comparison_predicate -> scalar_exp GE scalar_exp
Rule 24    scalar_exp -> scalar_exp PLUS scalar_exp
Rule 25    scalar_exp -> scalar_exp MINUS scalar_exp
Rule 26    scalar_exp -> scalar_exp TIMES scalar_exp
Rule 27    scalar_exp -> scalar_exp DIVIDE scalar_exp
Rule 28    scalar_exp -> atom
Rule 29    scalar_exp -> LPAREN scalar_exp RPAREN
Rule 30    atom -> NUMBER
Rule 31    atom -> ID
Rule 32    atom -> STRING
Rule 33    opt_orderby_clause -> ORDER BY ID
Rule 34    opt_orderby_clause -> <empty>
Rule 35    id_list -> ID
Rule 36    id_list -> id_list COMMA ID
Rule 37    expr_list -> expr
Rule 38    expr_list -> expr_list COMMA expr
Rule 39    expr -> expr PLUS term
Rule 40    expr -> expr MINUS term
Rule 41    expr -> term
Rule 42    expr -> ID
Rule 43    expr -> STRING
Rule 44    term -> term TIMES factor
Rule 45    term -> term DIVIDE factor
Rule 46    term -> factor
Rule 47    factor -> NUMBER
Rule 48    factor -> LPAREN expr RPAREN

Terminals, with rules where they appear

AND                  : 13
BY                   : 33
COMMA                : 36 38
DIVIDE               : 27 45
EQ                   : 18
FROM                 : 7
GE                   : 23
GT                   : 22
ID                   : 5 6 7 31 33 35 36 42
INSERT               : 5 6
INTO                 : 6
LE                   : 21
LPAREN               : 5 5 6 6 15 29 48
LT                   : 20
MINUS                : 25 40
NE                   : 19
NOT                  : 14
NUMBER               : 30 47
OR                   : 12
ORDER                : 33
PLUS                 : 24 39
RPAREN               : 5 5 6 6 15 29 48
SELECT               : 7
SEMI                 : 
STRING               : 32 43
TIMES                : 8 26 44
VALUES               : 5 6
WHERE                : 10
error                : 

Nonterminals, with rules where they appear

atom                 : 28
comparison_predicate : 17
expr                 : 37 38 39 40 48
expr_list            : 5 6 38
factor               : 44 45 46
id_list              : 5 6 9 36
insert_statement     : 3
opt_orderby_clause   : 7
opt_where_clause     : 7
predicate            : 16
scalar_exp           : 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 29
search_condition     : 10 12 12 13 13 14 15
select_columns       : 7
select_statement     : 4
statement            : 1 2
statement_list       : 2 0
term                 : 39 40 41 44 45

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . insert_statement
    (4) statement -> . select_statement
    (5) insert_statement -> . INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (6) insert_statement -> . INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (7) select_statement -> . SELECT select_columns FROM ID opt_where_clause opt_orderby_clause

    INSERT          shift and go to state 5
    SELECT          shift and go to state 6

    statement_list                 shift and go to state 1
    statement                      shift and go to state 2
    insert_statement               shift and go to state 3
    select_statement               shift and go to state 4

state 1

    (0) S' -> statement_list .
    (2) statement_list -> statement_list . statement
    (3) statement -> . insert_statement
    (4) statement -> . select_statement
    (5) insert_statement -> . INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (6) insert_statement -> . INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (7) select_statement -> . SELECT select_columns FROM ID opt_where_clause opt_orderby_clause

    INSERT          shift and go to state 5
    SELECT          shift and go to state 6

    statement                      shift and go to state 7
    insert_statement               shift and go to state 3
    select_statement               shift and go to state 4

state 2

    (1) statement_list -> statement .

    INSERT          reduce using rule 1 (statement_list -> statement .)
    SELECT          reduce using rule 1 (statement_list -> statement .)
    $end            reduce using rule 1 (statement_list -> statement .)


state 3

    (3) statement -> insert_statement .

    INSERT          reduce using rule 3 (statement -> insert_statement .)
    SELECT          reduce using rule 3 (statement -> insert_statement .)
    $end            reduce using rule 3 (statement -> insert_statement .)


state 4

    (4) statement -> select_statement .

    INSERT          reduce using rule 4 (statement -> select_statement .)
    SELECT          reduce using rule 4 (statement -> select_statement .)
    $end            reduce using rule 4 (statement -> select_statement .)


state 5

    (5) insert_statement -> INSERT . ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (6) insert_statement -> INSERT . INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN

    ID              shift and go to state 8
    INTO            shift and go to state 9


state 6

    (7) select_statement -> SELECT . select_columns FROM ID opt_where_clause opt_orderby_clause
    (8) select_columns -> . TIMES
    (9) select_columns -> . id_list
    (35) id_list -> . ID
    (36) id_list -> . id_list COMMA ID

    TIMES           shift and go to state 12
    ID              shift and go to state 11

    select_columns                 shift and go to state 10
    id_list                        shift and go to state 13

state 7

    (2) statement_list -> statement_list statement .

    INSERT          reduce using rule 2 (statement_list -> statement_list statement .)
    SELECT          reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 8

    (5) insert_statement -> INSERT ID . LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN

    LPAREN          shift and go to state 14


state 9

    (6) insert_statement -> INSERT INTO . ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN

    ID              shift and go to state 15


state 10

    (7) select_statement -> SELECT select_columns . FROM ID opt_where_clause opt_orderby_clause

    FROM            shift and go to state 16


state 11

    (35) id_list -> ID .

    COMMA           reduce using rule 35 (id_list -> ID .)
    FROM            reduce using rule 35 (id_list -> ID .)
    RPAREN          reduce using rule 35 (id_list -> ID .)


state 12

    (8) select_columns -> TIMES .

    FROM            reduce using rule 8 (select_columns -> TIMES .)


state 13

    (9) select_columns -> id_list .
    (36) id_list -> id_list . COMMA ID

    FROM            reduce using rule 9 (select_columns -> id_list .)
    COMMA           shift and go to state 17


state 14

    (5) insert_statement -> INSERT ID LPAREN . id_list RPAREN VALUES LPAREN expr_list RPAREN
    (35) id_list -> . ID
    (36) id_list -> . id_list COMMA ID

    ID              shift and go to state 11

    id_list                        shift and go to state 18

state 15

    (6) insert_statement -> INSERT INTO ID . LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN

    LPAREN          shift and go to state 19


state 16

    (7) select_statement -> SELECT select_columns FROM . ID opt_where_clause opt_orderby_clause

    ID              shift and go to state 20


state 17

    (36) id_list -> id_list COMMA . ID

    ID              shift and go to state 21


state 18

    (5) insert_statement -> INSERT ID LPAREN id_list . RPAREN VALUES LPAREN expr_list RPAREN
    (36) id_list -> id_list . COMMA ID

    RPAREN          shift and go to state 22
    COMMA           shift and go to state 17


state 19

    (6) insert_statement -> INSERT INTO ID LPAREN . id_list RPAREN VALUES LPAREN expr_list RPAREN
    (35) id_list -> . ID
    (36) id_list -> . id_list COMMA ID

    ID              shift and go to state 11

    id_list                        shift and go to state 23

state 20

    (7) select_statement -> SELECT select_columns FROM ID . opt_where_clause opt_orderby_clause
    (10) opt_where_clause -> . WHERE search_condition
    (11) opt_where_clause -> .

    WHERE           shift and go to state 25
    ORDER           reduce using rule 11 (opt_where_clause -> .)
    INSERT          reduce using rule 11 (opt_where_clause -> .)
    SELECT          reduce using rule 11 (opt_where_clause -> .)
    $end            reduce using rule 11 (opt_where_clause -> .)

    opt_where_clause               shift and go to state 24

state 21

    (36) id_list -> id_list COMMA ID .

    COMMA           reduce using rule 36 (id_list -> id_list COMMA ID .)
    FROM            reduce using rule 36 (id_list -> id_list COMMA ID .)
    RPAREN          reduce using rule 36 (id_list -> id_list COMMA ID .)


state 22

    (5) insert_statement -> INSERT ID LPAREN id_list RPAREN . VALUES LPAREN expr_list RPAREN

    VALUES          shift and go to state 26


state 23

    (6) insert_statement -> INSERT INTO ID LPAREN id_list . RPAREN VALUES LPAREN expr_list RPAREN
    (36) id_list -> id_list . COMMA ID

    RPAREN          shift and go to state 27
    COMMA           shift and go to state 17


state 24

    (7) select_statement -> SELECT select_columns FROM ID opt_where_clause . opt_orderby_clause
    (33) opt_orderby_clause -> . ORDER BY ID
    (34) opt_orderby_clause -> .

    ORDER           shift and go to state 29
    INSERT          reduce using rule 34 (opt_orderby_clause -> .)
    SELECT          reduce using rule 34 (opt_orderby_clause -> .)
    $end            reduce using rule 34 (opt_orderby_clause -> .)

    opt_orderby_clause             shift and go to state 28

state 25

    (10) opt_where_clause -> WHERE . search_condition
    (12) search_condition -> . search_condition OR search_condition
    (13) search_condition -> . search_condition AND search_condition
    (14) search_condition -> . NOT search_condition
    (15) search_condition -> . LPAREN search_condition RPAREN
    (16) search_condition -> . predicate
    (17) predicate -> . comparison_predicate
    (18) comparison_predicate -> . scalar_exp EQ scalar_exp
    (19) comparison_predicate -> . scalar_exp NE scalar_exp
    (20) comparison_predicate -> . scalar_exp LT scalar_exp
    (21) comparison_predicate -> . scalar_exp LE scalar_exp
    (22) comparison_predicate -> . scalar_exp GT scalar_exp
    (23) comparison_predicate -> . scalar_exp GE scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    NOT             shift and go to state 31
    LPAREN          shift and go to state 32
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    search_condition               shift and go to state 30
    predicate                      shift and go to state 33
    comparison_predicate           shift and go to state 34
    scalar_exp                     shift and go to state 35
    atom                           shift and go to state 36

state 26

    (5) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES . LPAREN expr_list RPAREN

    LPAREN          shift and go to state 40


state 27

    (6) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN . VALUES LPAREN expr_list RPAREN

    VALUES          shift and go to state 41


state 28

    (7) select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .

    INSERT          reduce using rule 7 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    SELECT          reduce using rule 7 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    $end            reduce using rule 7 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)


state 29

    (33) opt_orderby_clause -> ORDER . BY ID

    BY              shift and go to state 42


state 30

    (10) opt_where_clause -> WHERE search_condition .
    (12) search_condition -> search_condition . OR search_condition
    (13) search_condition -> search_condition . AND search_condition

    ORDER           reduce using rule 10 (opt_where_clause -> WHERE search_condition .)
    INSERT          reduce using rule 10 (opt_where_clause -> WHERE search_condition .)
    SELECT          reduce using rule 10 (opt_where_clause -> WHERE search_condition .)
    $end            reduce using rule 10 (opt_where_clause -> WHERE search_condition .)
    OR              shift and go to state 43
    AND             shift and go to state 44


state 31

    (14) search_condition -> NOT . search_condition
    (12) search_condition -> . search_condition OR search_condition
    (13) search_condition -> . search_condition AND search_condition
    (14) search_condition -> . NOT search_condition
    (15) search_condition -> . LPAREN search_condition RPAREN
    (16) search_condition -> . predicate
    (17) predicate -> . comparison_predicate
    (18) comparison_predicate -> . scalar_exp EQ scalar_exp
    (19) comparison_predicate -> . scalar_exp NE scalar_exp
    (20) comparison_predicate -> . scalar_exp LT scalar_exp
    (21) comparison_predicate -> . scalar_exp LE scalar_exp
    (22) comparison_predicate -> . scalar_exp GT scalar_exp
    (23) comparison_predicate -> . scalar_exp GE scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    NOT             shift and go to state 31
    LPAREN          shift and go to state 32
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    search_condition               shift and go to state 45
    predicate                      shift and go to state 33
    comparison_predicate           shift and go to state 34
    scalar_exp                     shift and go to state 35
    atom                           shift and go to state 36

state 32

    (15) search_condition -> LPAREN . search_condition RPAREN
    (29) scalar_exp -> LPAREN . scalar_exp RPAREN
    (12) search_condition -> . search_condition OR search_condition
    (13) search_condition -> . search_condition AND search_condition
    (14) search_condition -> . NOT search_condition
    (15) search_condition -> . LPAREN search_condition RPAREN
    (16) search_condition -> . predicate
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (17) predicate -> . comparison_predicate
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING
    (18) comparison_predicate -> . scalar_exp EQ scalar_exp
    (19) comparison_predicate -> . scalar_exp NE scalar_exp
    (20) comparison_predicate -> . scalar_exp LT scalar_exp
    (21) comparison_predicate -> . scalar_exp LE scalar_exp
    (22) comparison_predicate -> . scalar_exp GT scalar_exp
    (23) comparison_predicate -> . scalar_exp GE scalar_exp

    NOT             shift and go to state 31
    LPAREN          shift and go to state 32
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    search_condition               shift and go to state 46
    scalar_exp                     shift and go to state 47
    predicate                      shift and go to state 33
    atom                           shift and go to state 36
    comparison_predicate           shift and go to state 34

state 33

    (16) search_condition -> predicate .

    OR              reduce using rule 16 (search_condition -> predicate .)
    AND             reduce using rule 16 (search_condition -> predicate .)
    ORDER           reduce using rule 16 (search_condition -> predicate .)
    INSERT          reduce using rule 16 (search_condition -> predicate .)
    SELECT          reduce using rule 16 (search_condition -> predicate .)
    $end            reduce using rule 16 (search_condition -> predicate .)
    RPAREN          reduce using rule 16 (search_condition -> predicate .)


state 34

    (17) predicate -> comparison_predicate .

    OR              reduce using rule 17 (predicate -> comparison_predicate .)
    AND             reduce using rule 17 (predicate -> comparison_predicate .)
    ORDER           reduce using rule 17 (predicate -> comparison_predicate .)
    INSERT          reduce using rule 17 (predicate -> comparison_predicate .)
    SELECT          reduce using rule 17 (predicate -> comparison_predicate .)
    $end            reduce using rule 17 (predicate -> comparison_predicate .)
    RPAREN          reduce using rule 17 (predicate -> comparison_predicate .)


state 35

    (18) comparison_predicate -> scalar_exp . EQ scalar_exp
    (19) comparison_predicate -> scalar_exp . NE scalar_exp
    (20) comparison_predicate -> scalar_exp . LT scalar_exp
    (21) comparison_predicate -> scalar_exp . LE scalar_exp
    (22) comparison_predicate -> scalar_exp . GT scalar_exp
    (23) comparison_predicate -> scalar_exp . GE scalar_exp
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    EQ              shift and go to state 48
    NE              shift and go to state 49
    LT              shift and go to state 50
    LE              shift and go to state 51
    GT              shift and go to state 52
    GE              shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57


state 36

    (28) scalar_exp -> atom .

    EQ              reduce using rule 28 (scalar_exp -> atom .)
    NE              reduce using rule 28 (scalar_exp -> atom .)
    LT              reduce using rule 28 (scalar_exp -> atom .)
    LE              reduce using rule 28 (scalar_exp -> atom .)
    GT              reduce using rule 28 (scalar_exp -> atom .)
    GE              reduce using rule 28 (scalar_exp -> atom .)
    PLUS            reduce using rule 28 (scalar_exp -> atom .)
    MINUS           reduce using rule 28 (scalar_exp -> atom .)
    TIMES           reduce using rule 28 (scalar_exp -> atom .)
    DIVIDE          reduce using rule 28 (scalar_exp -> atom .)
    RPAREN          reduce using rule 28 (scalar_exp -> atom .)
    OR              reduce using rule 28 (scalar_exp -> atom .)
    AND             reduce using rule 28 (scalar_exp -> atom .)
    ORDER           reduce using rule 28 (scalar_exp -> atom .)
    INSERT          reduce using rule 28 (scalar_exp -> atom .)
    SELECT          reduce using rule 28 (scalar_exp -> atom .)
    $end            reduce using rule 28 (scalar_exp -> atom .)


state 37

    (30) atom -> NUMBER .

    EQ              reduce using rule 30 (atom -> NUMBER .)
    NE              reduce using rule 30 (atom -> NUMBER .)
    LT              reduce using rule 30 (atom -> NUMBER .)
    LE              reduce using rule 30 (atom -> NUMBER .)
    GT              reduce using rule 30 (atom -> NUMBER .)
    GE              reduce using rule 30 (atom -> NUMBER .)
    PLUS            reduce using rule 30 (atom -> NUMBER .)
    MINUS           reduce using rule 30 (atom -> NUMBER .)
    TIMES           reduce using rule 30 (atom -> NUMBER .)
    DIVIDE          reduce using rule 30 (atom -> NUMBER .)
    RPAREN          reduce using rule 30 (atom -> NUMBER .)
    OR              reduce using rule 30 (atom -> NUMBER .)
    AND             reduce using rule 30 (atom -> NUMBER .)
    ORDER           reduce using rule 30 (atom -> NUMBER .)
    INSERT          reduce using rule 30 (atom -> NUMBER .)
    SELECT          reduce using rule 30 (atom -> NUMBER .)
    $end            reduce using rule 30 (atom -> NUMBER .)


state 38

    (31) atom -> ID .

    EQ              reduce using rule 31 (atom -> ID .)
    NE              reduce using rule 31 (atom -> ID .)
    LT              reduce using rule 31 (atom -> ID .)
    LE              reduce using rule 31 (atom -> ID .)
    GT              reduce using rule 31 (atom -> ID .)
    GE              reduce using rule 31 (atom -> ID .)
    PLUS            reduce using rule 31 (atom -> ID .)
    MINUS           reduce using rule 31 (atom -> ID .)
    TIMES           reduce using rule 31 (atom -> ID .)
    DIVIDE          reduce using rule 31 (atom -> ID .)
    RPAREN          reduce using rule 31 (atom -> ID .)
    OR              reduce using rule 31 (atom -> ID .)
    AND             reduce using rule 31 (atom -> ID .)
    ORDER           reduce using rule 31 (atom -> ID .)
    INSERT          reduce using rule 31 (atom -> ID .)
    SELECT          reduce using rule 31 (atom -> ID .)
    $end            reduce using rule 31 (atom -> ID .)


state 39

    (32) atom -> STRING .

    EQ              reduce using rule 32 (atom -> STRING .)
    NE              reduce using rule 32 (atom -> STRING .)
    LT              reduce using rule 32 (atom -> STRING .)
    LE              reduce using rule 32 (atom -> STRING .)
    GT              reduce using rule 32 (atom -> STRING .)
    GE              reduce using rule 32 (atom -> STRING .)
    PLUS            reduce using rule 32 (atom -> STRING .)
    MINUS           reduce using rule 32 (atom -> STRING .)
    TIMES           reduce using rule 32 (atom -> STRING .)
    DIVIDE          reduce using rule 32 (atom -> STRING .)
    RPAREN          reduce using rule 32 (atom -> STRING .)
    OR              reduce using rule 32 (atom -> STRING .)
    AND             reduce using rule 32 (atom -> STRING .)
    ORDER           reduce using rule 32 (atom -> STRING .)
    INSERT          reduce using rule 32 (atom -> STRING .)
    SELECT          reduce using rule 32 (atom -> STRING .)
    $end            reduce using rule 32 (atom -> STRING .)


state 40

    (5) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN . expr_list RPAREN
    (37) expr_list -> . expr
    (38) expr_list -> . expr_list COMMA expr
    (39) expr -> . expr PLUS term
    (40) expr -> . expr MINUS term
    (41) expr -> . term
    (42) expr -> . ID
    (43) expr -> . STRING
    (44) term -> . term TIMES factor
    (45) term -> . term DIVIDE factor
    (46) term -> . factor
    (47) factor -> . NUMBER
    (48) factor -> . LPAREN expr RPAREN

    ID              shift and go to state 58
    STRING          shift and go to state 63
    NUMBER          shift and go to state 65
    LPAREN          shift and go to state 59

    expr_list                      shift and go to state 60
    expr                           shift and go to state 61
    term                           shift and go to state 62
    factor                         shift and go to state 64

state 41

    (6) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES . LPAREN expr_list RPAREN

    LPAREN          shift and go to state 66


state 42

    (33) opt_orderby_clause -> ORDER BY . ID

    ID              shift and go to state 67


state 43

    (12) search_condition -> search_condition OR . search_condition
    (12) search_condition -> . search_condition OR search_condition
    (13) search_condition -> . search_condition AND search_condition
    (14) search_condition -> . NOT search_condition
    (15) search_condition -> . LPAREN search_condition RPAREN
    (16) search_condition -> . predicate
    (17) predicate -> . comparison_predicate
    (18) comparison_predicate -> . scalar_exp EQ scalar_exp
    (19) comparison_predicate -> . scalar_exp NE scalar_exp
    (20) comparison_predicate -> . scalar_exp LT scalar_exp
    (21) comparison_predicate -> . scalar_exp LE scalar_exp
    (22) comparison_predicate -> . scalar_exp GT scalar_exp
    (23) comparison_predicate -> . scalar_exp GE scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    NOT             shift and go to state 31
    LPAREN          shift and go to state 32
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    search_condition               shift and go to state 68
    predicate                      shift and go to state 33
    comparison_predicate           shift and go to state 34
    scalar_exp                     shift and go to state 35
    atom                           shift and go to state 36

state 44

    (13) search_condition -> search_condition AND . search_condition
    (12) search_condition -> . search_condition OR search_condition
    (13) search_condition -> . search_condition AND search_condition
    (14) search_condition -> . NOT search_condition
    (15) search_condition -> . LPAREN search_condition RPAREN
    (16) search_condition -> . predicate
    (17) predicate -> . comparison_predicate
    (18) comparison_predicate -> . scalar_exp EQ scalar_exp
    (19) comparison_predicate -> . scalar_exp NE scalar_exp
    (20) comparison_predicate -> . scalar_exp LT scalar_exp
    (21) comparison_predicate -> . scalar_exp LE scalar_exp
    (22) comparison_predicate -> . scalar_exp GT scalar_exp
    (23) comparison_predicate -> . scalar_exp GE scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    NOT             shift and go to state 31
    LPAREN          shift and go to state 32
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    search_condition               shift and go to state 69
    predicate                      shift and go to state 33
    comparison_predicate           shift and go to state 34
    scalar_exp                     shift and go to state 35
    atom                           shift and go to state 36

state 45

    (14) search_condition -> NOT search_condition .
    (12) search_condition -> search_condition . OR search_condition
    (13) search_condition -> search_condition . AND search_condition

    OR              reduce using rule 14 (search_condition -> NOT search_condition .)
    AND             reduce using rule 14 (search_condition -> NOT search_condition .)
    ORDER           reduce using rule 14 (search_condition -> NOT search_condition .)
    INSERT          reduce using rule 14 (search_condition -> NOT search_condition .)
    SELECT          reduce using rule 14 (search_condition -> NOT search_condition .)
    $end            reduce using rule 14 (search_condition -> NOT search_condition .)
    RPAREN          reduce using rule 14 (search_condition -> NOT search_condition .)

  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 46

    (15) search_condition -> LPAREN search_condition . RPAREN
    (12) search_condition -> search_condition . OR search_condition
    (13) search_condition -> search_condition . AND search_condition

    RPAREN          shift and go to state 70
    OR              shift and go to state 43
    AND             shift and go to state 44


state 47

    (29) scalar_exp -> LPAREN scalar_exp . RPAREN
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp
    (18) comparison_predicate -> scalar_exp . EQ scalar_exp
    (19) comparison_predicate -> scalar_exp . NE scalar_exp
    (20) comparison_predicate -> scalar_exp . LT scalar_exp
    (21) comparison_predicate -> scalar_exp . LE scalar_exp
    (22) comparison_predicate -> scalar_exp . GT scalar_exp
    (23) comparison_predicate -> scalar_exp . GE scalar_exp

    RPAREN          shift and go to state 71
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    EQ              shift and go to state 48
    NE              shift and go to state 49
    LT              shift and go to state 50
    LE              shift and go to state 51
    GT              shift and go to state 52
    GE              shift and go to state 53


state 48

    (18) comparison_predicate -> scalar_exp EQ . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 72
    atom                           shift and go to state 36

state 49

    (19) comparison_predicate -> scalar_exp NE . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 74
    atom                           shift and go to state 36

state 50

    (20) comparison_predicate -> scalar_exp LT . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 75
    atom                           shift and go to state 36

state 51

    (21) comparison_predicate -> scalar_exp LE . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 76
    atom                           shift and go to state 36

state 52

    (22) comparison_predicate -> scalar_exp GT . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 77
    atom                           shift and go to state 36

state 53

    (23) comparison_predicate -> scalar_exp GE . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 78
    atom                           shift and go to state 36

state 54

    (24) scalar_exp -> scalar_exp PLUS . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 79
    atom                           shift and go to state 36

state 55

    (25) scalar_exp -> scalar_exp MINUS . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 80
    atom                           shift and go to state 36

state 56

    (26) scalar_exp -> scalar_exp TIMES . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 81
    atom                           shift and go to state 36

state 57

    (27) scalar_exp -> scalar_exp DIVIDE . scalar_exp
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 82
    atom                           shift and go to state 36

state 58

    (42) expr -> ID .

    PLUS            reduce using rule 42 (expr -> ID .)
    MINUS           reduce using rule 42 (expr -> ID .)
    RPAREN          reduce using rule 42 (expr -> ID .)
    COMMA           reduce using rule 42 (expr -> ID .)


state 59

    (48) factor -> LPAREN . expr RPAREN
    (39) expr -> . expr PLUS term
    (40) expr -> . expr MINUS term
    (41) expr -> . term
    (42) expr -> . ID
    (43) expr -> . STRING
    (44) term -> . term TIMES factor
    (45) term -> . term DIVIDE factor
    (46) term -> . factor
    (47) factor -> . NUMBER
    (48) factor -> . LPAREN expr RPAREN

    ID              shift and go to state 58
    STRING          shift and go to state 63
    NUMBER          shift and go to state 65
    LPAREN          shift and go to state 59

    expr                           shift and go to state 83
    term                           shift and go to state 62
    factor                         shift and go to state 64

state 60

    (5) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list . RPAREN
    (38) expr_list -> expr_list . COMMA expr

    RPAREN          shift and go to state 84
    COMMA           shift and go to state 85


state 61

    (37) expr_list -> expr .
    (39) expr -> expr . PLUS term
    (40) expr -> expr . MINUS term

    RPAREN          reduce using rule 37 (expr_list -> expr .)
    COMMA           reduce using rule 37 (expr_list -> expr .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 62

    (41) expr -> term .
    (44) term -> term . TIMES factor
    (45) term -> term . DIVIDE factor

    PLUS            reduce using rule 41 (expr -> term .)
    MINUS           reduce using rule 41 (expr -> term .)
    RPAREN          reduce using rule 41 (expr -> term .)
    COMMA           reduce using rule 41 (expr -> term .)
    TIMES           shift and go to state 88
    DIVIDE          shift and go to state 89


state 63

    (43) expr -> STRING .

    PLUS            reduce using rule 43 (expr -> STRING .)
    MINUS           reduce using rule 43 (expr -> STRING .)
    RPAREN          reduce using rule 43 (expr -> STRING .)
    COMMA           reduce using rule 43 (expr -> STRING .)


state 64

    (46) term -> factor .

    TIMES           reduce using rule 46 (term -> factor .)
    DIVIDE          reduce using rule 46 (term -> factor .)
    PLUS            reduce using rule 46 (term -> factor .)
    MINUS           reduce using rule 46 (term -> factor .)
    RPAREN          reduce using rule 46 (term -> factor .)
    COMMA           reduce using rule 46 (term -> factor .)


state 65

    (47) factor -> NUMBER .

    TIMES           reduce using rule 47 (factor -> NUMBER .)
    DIVIDE          reduce using rule 47 (factor -> NUMBER .)
    PLUS            reduce using rule 47 (factor -> NUMBER .)
    MINUS           reduce using rule 47 (factor -> NUMBER .)
    RPAREN          reduce using rule 47 (factor -> NUMBER .)
    COMMA           reduce using rule 47 (factor -> NUMBER .)


state 66

    (6) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN . expr_list RPAREN
    (37) expr_list -> . expr
    (38) expr_list -> . expr_list COMMA expr
    (39) expr -> . expr PLUS term
    (40) expr -> . expr MINUS term
    (41) expr -> . term
    (42) expr -> . ID
    (43) expr -> . STRING
    (44) term -> . term TIMES factor
    (45) term -> . term DIVIDE factor
    (46) term -> . factor
    (47) factor -> . NUMBER
    (48) factor -> . LPAREN expr RPAREN

    ID              shift and go to state 58
    STRING          shift and go to state 63
    NUMBER          shift and go to state 65
    LPAREN          shift and go to state 59

    expr_list                      shift and go to state 90
    expr                           shift and go to state 61
    term                           shift and go to state 62
    factor                         shift and go to state 64

state 67

    (33) opt_orderby_clause -> ORDER BY ID .

    INSERT          reduce using rule 33 (opt_orderby_clause -> ORDER BY ID .)
    SELECT          reduce using rule 33 (opt_orderby_clause -> ORDER BY ID .)
    $end            reduce using rule 33 (opt_orderby_clause -> ORDER BY ID .)


state 68

    (12) search_condition -> search_condition OR search_condition .
    (12) search_condition -> search_condition . OR search_condition
    (13) search_condition -> search_condition . AND search_condition

    OR              reduce using rule 12 (search_condition -> search_condition OR search_condition .)
    ORDER           reduce using rule 12 (search_condition -> search_condition OR search_condition .)
    INSERT          reduce using rule 12 (search_condition -> search_condition OR search_condition .)
    SELECT          reduce using rule 12 (search_condition -> search_condition OR search_condition .)
    $end            reduce using rule 12 (search_condition -> search_condition OR search_condition .)
    RPAREN          reduce using rule 12 (search_condition -> search_condition OR search_condition .)
    AND             shift and go to state 44

  ! AND             [ reduce using rule 12 (search_condition -> search_condition OR search_condition .) ]
  ! OR              [ shift and go to state 43 ]


state 69

    (13) search_condition -> search_condition AND search_condition .
    (12) search_condition -> search_condition . OR search_condition
    (13) search_condition -> search_condition . AND search_condition

    OR              reduce using rule 13 (search_condition -> search_condition AND search_condition .)
    AND             reduce using rule 13 (search_condition -> search_condition AND search_condition .)
    ORDER           reduce using rule 13 (search_condition -> search_condition AND search_condition .)
    INSERT          reduce using rule 13 (search_condition -> search_condition AND search_condition .)
    SELECT          reduce using rule 13 (search_condition -> search_condition AND search_condition .)
    $end            reduce using rule 13 (search_condition -> search_condition AND search_condition .)
    RPAREN          reduce using rule 13 (search_condition -> search_condition AND search_condition .)

  ! OR              [ shift and go to state 43 ]
  ! AND             [ shift and go to state 44 ]


state 70

    (15) search_condition -> LPAREN search_condition RPAREN .

    OR              reduce using rule 15 (search_condition -> LPAREN search_condition RPAREN .)
    AND             reduce using rule 15 (search_condition -> LPAREN search_condition RPAREN .)
    ORDER           reduce using rule 15 (search_condition -> LPAREN search_condition RPAREN .)
    INSERT          reduce using rule 15 (search_condition -> LPAREN search_condition RPAREN .)
    SELECT          reduce using rule 15 (search_condition -> LPAREN search_condition RPAREN .)
    $end            reduce using rule 15 (search_condition -> LPAREN search_condition RPAREN .)
    RPAREN          reduce using rule 15 (search_condition -> LPAREN search_condition RPAREN .)


state 71

    (29) scalar_exp -> LPAREN scalar_exp RPAREN .

    EQ              reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    NE              reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    LT              reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    LE              reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    GT              reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    GE              reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    PLUS            reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    MINUS           reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    TIMES           reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    DIVIDE          reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    RPAREN          reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    OR              reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    AND             reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    ORDER           reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    INSERT          reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    SELECT          reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    $end            reduce using rule 29 (scalar_exp -> LPAREN scalar_exp RPAREN .)


state 72

    (18) comparison_predicate -> scalar_exp EQ scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 18 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    AND             reduce using rule 18 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    ORDER           reduce using rule 18 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    INSERT          reduce using rule 18 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    SELECT          reduce using rule 18 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    $end            reduce using rule 18 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    RPAREN          reduce using rule 18 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57


state 73

    (29) scalar_exp -> LPAREN . scalar_exp RPAREN
    (24) scalar_exp -> . scalar_exp PLUS scalar_exp
    (25) scalar_exp -> . scalar_exp MINUS scalar_exp
    (26) scalar_exp -> . scalar_exp TIMES scalar_exp
    (27) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (28) scalar_exp -> . atom
    (29) scalar_exp -> . LPAREN scalar_exp RPAREN
    (30) atom -> . NUMBER
    (31) atom -> . ID
    (32) atom -> . STRING

    LPAREN          shift and go to state 73
    NUMBER          shift and go to state 37
    ID              shift and go to state 38
    STRING          shift and go to state 39

    scalar_exp                     shift and go to state 91
    atom                           shift and go to state 36

state 74

    (19) comparison_predicate -> scalar_exp NE scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 19 (comparison_predicate -> scalar_exp NE scalar_exp .)
    AND             reduce using rule 19 (comparison_predicate -> scalar_exp NE scalar_exp .)
    ORDER           reduce using rule 19 (comparison_predicate -> scalar_exp NE scalar_exp .)
    INSERT          reduce using rule 19 (comparison_predicate -> scalar_exp NE scalar_exp .)
    SELECT          reduce using rule 19 (comparison_predicate -> scalar_exp NE scalar_exp .)
    $end            reduce using rule 19 (comparison_predicate -> scalar_exp NE scalar_exp .)
    RPAREN          reduce using rule 19 (comparison_predicate -> scalar_exp NE scalar_exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57


state 75

    (20) comparison_predicate -> scalar_exp LT scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 20 (comparison_predicate -> scalar_exp LT scalar_exp .)
    AND             reduce using rule 20 (comparison_predicate -> scalar_exp LT scalar_exp .)
    ORDER           reduce using rule 20 (comparison_predicate -> scalar_exp LT scalar_exp .)
    INSERT          reduce using rule 20 (comparison_predicate -> scalar_exp LT scalar_exp .)
    SELECT          reduce using rule 20 (comparison_predicate -> scalar_exp LT scalar_exp .)
    $end            reduce using rule 20 (comparison_predicate -> scalar_exp LT scalar_exp .)
    RPAREN          reduce using rule 20 (comparison_predicate -> scalar_exp LT scalar_exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57


state 76

    (21) comparison_predicate -> scalar_exp LE scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 21 (comparison_predicate -> scalar_exp LE scalar_exp .)
    AND             reduce using rule 21 (comparison_predicate -> scalar_exp LE scalar_exp .)
    ORDER           reduce using rule 21 (comparison_predicate -> scalar_exp LE scalar_exp .)
    INSERT          reduce using rule 21 (comparison_predicate -> scalar_exp LE scalar_exp .)
    SELECT          reduce using rule 21 (comparison_predicate -> scalar_exp LE scalar_exp .)
    $end            reduce using rule 21 (comparison_predicate -> scalar_exp LE scalar_exp .)
    RPAREN          reduce using rule 21 (comparison_predicate -> scalar_exp LE scalar_exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57


state 77

    (22) comparison_predicate -> scalar_exp GT scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 22 (comparison_predicate -> scalar_exp GT scalar_exp .)
    AND             reduce using rule 22 (comparison_predicate -> scalar_exp GT scalar_exp .)
    ORDER           reduce using rule 22 (comparison_predicate -> scalar_exp GT scalar_exp .)
    INSERT          reduce using rule 22 (comparison_predicate -> scalar_exp GT scalar_exp .)
    SELECT          reduce using rule 22 (comparison_predicate -> scalar_exp GT scalar_exp .)
    $end            reduce using rule 22 (comparison_predicate -> scalar_exp GT scalar_exp .)
    RPAREN          reduce using rule 22 (comparison_predicate -> scalar_exp GT scalar_exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57


state 78

    (23) comparison_predicate -> scalar_exp GE scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 23 (comparison_predicate -> scalar_exp GE scalar_exp .)
    AND             reduce using rule 23 (comparison_predicate -> scalar_exp GE scalar_exp .)
    ORDER           reduce using rule 23 (comparison_predicate -> scalar_exp GE scalar_exp .)
    INSERT          reduce using rule 23 (comparison_predicate -> scalar_exp GE scalar_exp .)
    SELECT          reduce using rule 23 (comparison_predicate -> scalar_exp GE scalar_exp .)
    $end            reduce using rule 23 (comparison_predicate -> scalar_exp GE scalar_exp .)
    RPAREN          reduce using rule 23 (comparison_predicate -> scalar_exp GE scalar_exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57


state 79

    (24) scalar_exp -> scalar_exp PLUS scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    EQ              reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    NE              reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    LT              reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    LE              reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    GT              reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    GE              reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    PLUS            reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    MINUS           reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    RPAREN          reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    OR              reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    AND             reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    ORDER           reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    INSERT          reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    SELECT          reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    $end            reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TIMES           [ reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .) ]
  ! DIVIDE          [ reduce using rule 24 (scalar_exp -> scalar_exp PLUS scalar_exp .) ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]


state 80

    (25) scalar_exp -> scalar_exp MINUS scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    EQ              reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    NE              reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    LT              reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    LE              reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    GT              reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    GE              reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    PLUS            reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    MINUS           reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    RPAREN          reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    OR              reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    AND             reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    ORDER           reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    INSERT          reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    SELECT          reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    $end            reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TIMES           [ reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .) ]
  ! DIVIDE          [ reduce using rule 25 (scalar_exp -> scalar_exp MINUS scalar_exp .) ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]


state 81

    (26) scalar_exp -> scalar_exp TIMES scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    EQ              reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    NE              reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    LT              reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    LE              reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    GT              reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    GE              reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    PLUS            reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    MINUS           reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    TIMES           reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    DIVIDE          reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    RPAREN          reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    OR              reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    AND             reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    ORDER           reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    INSERT          reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    SELECT          reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    $end            reduce using rule 26 (scalar_exp -> scalar_exp TIMES scalar_exp .)

  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]


state 82

    (27) scalar_exp -> scalar_exp DIVIDE scalar_exp .
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    EQ              reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    NE              reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    LT              reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    LE              reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    GT              reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    GE              reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    PLUS            reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    MINUS           reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    TIMES           reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    DIVIDE          reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    RPAREN          reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    OR              reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    AND             reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    ORDER           reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    INSERT          reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    SELECT          reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    $end            reduce using rule 27 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)

  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]


state 83

    (48) factor -> LPAREN expr . RPAREN
    (39) expr -> expr . PLUS term
    (40) expr -> expr . MINUS term

    RPAREN          shift and go to state 92
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 84

    (5) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .

    INSERT          reduce using rule 5 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    SELECT          reduce using rule 5 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    $end            reduce using rule 5 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)


state 85

    (38) expr_list -> expr_list COMMA . expr
    (39) expr -> . expr PLUS term
    (40) expr -> . expr MINUS term
    (41) expr -> . term
    (42) expr -> . ID
    (43) expr -> . STRING
    (44) term -> . term TIMES factor
    (45) term -> . term DIVIDE factor
    (46) term -> . factor
    (47) factor -> . NUMBER
    (48) factor -> . LPAREN expr RPAREN

    ID              shift and go to state 58
    STRING          shift and go to state 63
    NUMBER          shift and go to state 65
    LPAREN          shift and go to state 59

    expr                           shift and go to state 93
    term                           shift and go to state 62
    factor                         shift and go to state 64

state 86

    (39) expr -> expr PLUS . term
    (44) term -> . term TIMES factor
    (45) term -> . term DIVIDE factor
    (46) term -> . factor
    (47) factor -> . NUMBER
    (48) factor -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 65
    LPAREN          shift and go to state 59

    term                           shift and go to state 94
    factor                         shift and go to state 64

state 87

    (40) expr -> expr MINUS . term
    (44) term -> . term TIMES factor
    (45) term -> . term DIVIDE factor
    (46) term -> . factor
    (47) factor -> . NUMBER
    (48) factor -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 65
    LPAREN          shift and go to state 59

    term                           shift and go to state 95
    factor                         shift and go to state 64

state 88

    (44) term -> term TIMES . factor
    (47) factor -> . NUMBER
    (48) factor -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 65
    LPAREN          shift and go to state 59

    factor                         shift and go to state 96

state 89

    (45) term -> term DIVIDE . factor
    (47) factor -> . NUMBER
    (48) factor -> . LPAREN expr RPAREN

    NUMBER          shift and go to state 65
    LPAREN          shift and go to state 59

    factor                         shift and go to state 97

state 90

    (6) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list . RPAREN
    (38) expr_list -> expr_list . COMMA expr

    RPAREN          shift and go to state 98
    COMMA           shift and go to state 85


state 91

    (29) scalar_exp -> LPAREN scalar_exp . RPAREN
    (24) scalar_exp -> scalar_exp . PLUS scalar_exp
    (25) scalar_exp -> scalar_exp . MINUS scalar_exp
    (26) scalar_exp -> scalar_exp . TIMES scalar_exp
    (27) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    RPAREN          shift and go to state 71
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57


state 92

    (48) factor -> LPAREN expr RPAREN .

    TIMES           reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 48 (factor -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 48 (factor -> LPAREN expr RPAREN .)


state 93

    (38) expr_list -> expr_list COMMA expr .
    (39) expr -> expr . PLUS term
    (40) expr -> expr . MINUS term

    RPAREN          reduce using rule 38 (expr_list -> expr_list COMMA expr .)
    COMMA           reduce using rule 38 (expr_list -> expr_list COMMA expr .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 87


state 94

    (39) expr -> expr PLUS term .
    (44) term -> term . TIMES factor
    (45) term -> term . DIVIDE factor

    PLUS            reduce using rule 39 (expr -> expr PLUS term .)
    MINUS           reduce using rule 39 (expr -> expr PLUS term .)
    RPAREN          reduce using rule 39 (expr -> expr PLUS term .)
    COMMA           reduce using rule 39 (expr -> expr PLUS term .)
    TIMES           shift and go to state 88
    DIVIDE          shift and go to state 89


state 95

    (40) expr -> expr MINUS term .
    (44) term -> term . TIMES factor
    (45) term -> term . DIVIDE factor

    PLUS            reduce using rule 40 (expr -> expr MINUS term .)
    MINUS           reduce using rule 40 (expr -> expr MINUS term .)
    RPAREN          reduce using rule 40 (expr -> expr MINUS term .)
    COMMA           reduce using rule 40 (expr -> expr MINUS term .)
    TIMES           shift and go to state 88
    DIVIDE          shift and go to state 89


state 96

    (44) term -> term TIMES factor .

    TIMES           reduce using rule 44 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 44 (term -> term TIMES factor .)
    PLUS            reduce using rule 44 (term -> term TIMES factor .)
    MINUS           reduce using rule 44 (term -> term TIMES factor .)
    RPAREN          reduce using rule 44 (term -> term TIMES factor .)
    COMMA           reduce using rule 44 (term -> term TIMES factor .)


state 97

    (45) term -> term DIVIDE factor .

    TIMES           reduce using rule 45 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 45 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 45 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 45 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 45 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 45 (term -> term DIVIDE factor .)


state 98

    (6) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .

    INSERT          reduce using rule 6 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    SELECT          reduce using rule 6 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    $end            reduce using rule 6 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)

